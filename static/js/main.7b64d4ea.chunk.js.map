{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","moviesList","addNewMovie","wasAdd","showMessage","Title","Poster","imdbID","newMovie","Plot","onSubmit","event","preventDefault","fetch","toLowerCase","then","response","json","htmlFor","type","id","placeholder","classNames","Response","value","onChange","target","findMovie","autoComplete","onClick","Object","values","item","includes","disabled","prototype","hasOwnProperty","call","App","state","data","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b64d4ea.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        {imgUrl === 'N/A'\n          ? (<p className=\"image__empty\">Sorry, there is no poster</p>)\n          : (\n            <img\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          )\n        }\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport movies from '../../api/movies.json';\n\nexport const FindMovie = ({ addMovie }) => {\n  const BASE_URL = 'https://www.omdbapi.com/?apikey=2dfeee8&t=';\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState({});\n  const [moviesList, addNewMovie] = useState(movies);\n  const [wasAdd, showMessage] = useState(false);\n\n  const getMovie = () => fetch(BASE_URL + title.toLowerCase())\n    .then(response => response.json())\n    .then(response => setMovie(response));\n\n  const findMovie = (event) => {\n    const { value } = event.target;\n\n    setTitle(value);\n    movie.Response = '';\n  };\n\n  const addMovieToList = () => {\n    const listOfImdbId = Object.values(moviesList.map(item => item.imdbId));\n\n    if (!listOfImdbId.includes(movie.imdbID)) {\n      addMovie(newMovie);\n      addNewMovie([...moviesList, newMovie]);\n      setTitle('');\n      setMovie({});\n      showMessage(false);\n    } else {\n      showMessage(true);\n    }\n  };\n\n  const {\n    Title,\n    Poster,\n    imdbID,\n    Plot,\n  } = movie;\n\n  const newMovie = {\n    title: Title,\n    description: Plot,\n    imdbId: imdbID,\n    imgUrl: Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          getMovie();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={\n                classNames('input', { 'is-danger': movie.Response === 'False' })\n              }\n              value={title}\n              onChange={event => findMovie(event)}\n              autoComplete=\"off\"\n            />\n          </div>\n          {movie.Response === 'False'\n            ? (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n            : null\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovieToList()}\n              disabled={!Object.prototype.hasOwnProperty.call(movie, 'Title')}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {\n          wasAdd\n            ? (\n              <p className=\"help is-danger\">\n                This movie has already been added to the list\n              </p>\n            ) : null\n        }\n        {movie.Title\n          ? (\n            <>\n              <h2 className=\"title\">Preview</h2>\n              <MovieCard {...newMovie} />\n            </>\n          ) : null\n        }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (newMovie) => {\n    this.setState(state => ({\n      movies: [...state.movies, newMovie],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}